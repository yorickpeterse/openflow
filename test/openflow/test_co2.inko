import openflow::co2::Co2
import std::test::Tests

fn pub tests(t: mut Tests) {
  t.test('Co2.update with values less than the smallest bucket') fn (t) {
    let co2 = Co2.new

    co2.update
    t.equal(co2.value, 400)

    co2.add(390)
    co2.update
    t.equal(co2.value, 400)
  }

  t.test('Co2.update without any samples') fn (t) {
    let co2 = Co2.new

    co2.update
    t.equal(co2.value, 400)
  }

  t.test('Co2.update with values in between buckets') fn (t) {
    let co2 = Co2.new

    co2.add(720)
    co2.add(720)
    co2.update
    t.equal(co2.value, 725)

    co2.add(735)
    co2.add(735)
    co2.update
    t.equal(co2.value, 725)

    co2.add(760)
    co2.add(760)
    co2.update
    t.equal(co2.value, 750)

    co2.add(775)
    co2.add(775)
    co2.update
    t.equal(co2.value, 775)

    co2.add(785)
    co2.add(785)
    co2.update
    t.equal(co2.value, 775)

    co2.add(740)
    co2.add(740)
    co2.update
    t.equal(co2.value, 750)
  }

  t.test('Co2.update with samples') fn (t) {
    let co2 = Co2.new

    co2.add(710)
    co2.add(780)
    co2.update
    t.equal(co2.value, 725)

    co2.add(750)
    co2.add(803)
    co2.add(810)
    co2.update
    t.equal(co2.value, 775)

    co2.add(1250)
    co2.add(1500)
    co2.update
    t.equal(co2.value, 1200)

    co2.update
    t.equal(co2.value, 400)

    co2.add(2500)
    co2.add(2500)
    co2.update
    t.equal(co2.value, 1200)
  }

  t.test('Co2.update with several outliers') fn (t) {
    let co2 = Co2.new

    co2.add(725)
    co2.add(725)
    co2.add(725)
    co2.add(800)
    co2.add(875)
    co2.add(950)
    co2.add(950)
    co2.add(1200)
    co2.add(1200)
    co2.update
    t.equal(co2.value, 825)
  }

  t.test('Co2.update with a short increase in CO2') fn (t) {
    let co2 = Co2.new

    co2.add(675)
    co2.add(675)
    co2.add(675)
    co2.add(675)
    co2.add(1200)
    co2.add(1200)
    co2.add(800)
    co2.update

    t.equal(co2.value, 700)
  }

  t.test('Co2.update with an even distribution') fn (t) {
    let co2 = Co2.new

    co2.add(500)
    co2.add(500)
    co2.add(700)
    co2.add(700)
    co2.add(750)
    co2.add(750)
    co2.add(800)
    co2.add(800)
    co2.add(900)
    co2.add(900)

    co2.update
    t.equal(co2.value, 725)
  }
}
